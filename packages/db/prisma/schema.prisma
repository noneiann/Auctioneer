// This file is part of the Auctioneer project
// It defines the Prisma schema for the Auctioneer application
// This schema includes models for users, items, auctions, and bids
// It also defines the relationships between these models
// The schema is used to generate the Prisma client for database operations


generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         String   @id @default(cuid())
  email      String   @unique
  password   String
  firstName  String
  lastName   String
  username   String
  permission Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  auctions   auction[]  @relation("UserAuctions")
  items      item[]     @relation("UserItems")
  bids       bid[]      @relation("UserBids")
}

model item {
  id           String    @id @default(cuid())
  name         String
  description  String
  imageUrl     String
  type         ItemType  // e.g. AUCTION, DIRECT, BARTER
  price        Float?    // for direct/buy-sell or reference value
  startingBid  Float?    // only used for auction
  currentBid   Float?    // only used for auction
  status       ItemStatus @default(AVAILABLE)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  ownerId      String
  owner        user      @relation("UserItems", fields: [ownerId], references: [id])

  auction      auction?
  bids         bid[]
}

model auction {
  id          String   @id @default(cuid())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String
  owner       user     @relation("UserAuctions", fields: [ownerId], references: [id])

  itemId      String   @unique
  item        item     @relation(fields: [itemId], references: [id])
}

model bid {
  id        String   @id @default(cuid())
  amount    Float
  createdAt DateTime @default(now())

  bidderId  String
  bidder    user     @relation("UserBids", fields: [bidderId], references: [id])

  itemId    String
  item      item     @relation(fields: [itemId], references: [id])
}

enum ItemType {
  AUCTION
  DIRECT
  BARTER
}

enum ItemStatus {
  AVAILABLE
  SOLD
  EXPIRED
  WITHDRAWN
}
